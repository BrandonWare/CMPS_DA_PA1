<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>CMPS 260: Module 1 Programming Assignment</title>
<style>* { font-family: monospace; }</style>
<script>

// NOTE: You can enter both code and explanations. For an explanation, start
//       the line with '//' which indicates a comment.

// NOTE: console.log prints text to the browser console that you can enable
//       to see the output. It is a little bit more convenient than alert so
//       we will use it most of the time.

// NOTE: Please review the following links regularly:
//       https://it.pointpark.edu/tutorials/arrays-vs-objects/
//       https://it.pointpark.edu/tutorials/no-prototype-vs-prototype/
//       https://it.pointpark.edu/tutorials/implementation-vs-interface/



//----------------------------//
// Setting up the environment //
//----------------------------//
console.log("Setting up the environment");



//-------------------//
// JavaScript basics //
//-------------------//
console.log("JavaScript basics");

var greeting = "Hello World!";
console.log(greeting);
alert(greeting);

var myVariable = "global";
var myOtherVariable = "global";

function myFunction() {
  var myVariable = "local";
  return myVariable;
}

function myOtherFunction() {
  myOtherVariable = "local";
  return myOtherVariable;
}

console.log(myVariable);
console.log(myFunction());
console.log(myOtherVariable);
console.log(myOtherFunction());
console.log(myOtherVariable);

console.log(10 & 5);
console.log(10 & 6);

console.log(5 == "5");
console.log(5 === "5");



//--------------------//
// Control structures //
//--------------------//
console.log("Control structures");

var year = 2016;
if ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) {
  console.log(year + " is a leap year.");
} else {
  console.log(year + " is not a leap year.");
}

var n = 10;
var factorial = 1;
for (var i = 1; i <= n; i++) {
  factorial *= i;
}
console.log("Factorial of " + n + " is " + factorial);



//-----------//
// Functions //
//-----------//
console.log("Functions");

function checkForNumber(arr, num) {
  return arr[0] === num || arr[arr.length - 1] === num;
}
console.log(checkForNumber([4, 2, 5, 3], 4));
console.log(checkForNumber([4, 2, 5, 3], 3));
console.log(checkForNumber([4, 2, 5, 3], 2));
console.log(checkForNumber([4, 2, 5, 3], 13));



//-------------------------------------------//
// Object-oriented programming in JavaScript //
//-------------------------------------------//
console.log("Object-oriented programming in JavaScript");

function Triangle(side) {
  this.side = side;
}

Triangle.prototype.getCircumference = function() {
  return 3 * this.side;
};

Triangle.prototype.getArea = function() {
  return (Math.sqrt(3) / 4) * this.side * this.side;
};

var triangle = new Triangle(5);
console.log(triangle.getCircumference());
console.log(triangle.getArea());



//---------------------//
// Debugging and tools //
//---------------------//
console.log("Debugging and tools");



//---------------------------//
// Why should we use arrays? //
//---------------------------//
console.log("Why should we use arrays?");

var day1 = 68, day2 = 70, day3 = 72, day4 = 67, day5 = 71;
var avg1 = (day1 + day2 + day3 + day4 + day5) / 5;
console.log(avg1);

var temps = [68, 70, 72, 67, 71];
var sum = 0;
for (var i = 0; i < temps.length; i++) {
  sum += temps[i];
}
var avg2 = sum / temps.length;
console.log(avg2);



//----------------------------------//
// Creating and initializing arrays //
//----------------------------------//
console.log("Creating and initializing arrays");

var daysOfWeek1 = new Array();
var daysOfWeek2 = new Array(7);
var daysOfWeek3 = new Array("Sunday", "Monday", "Tuesday", "Wednesday",
                            "Thursday", "Friday", "Saturday");
var daysOfWeek4 = [];
var daysOfWeek5 = ["Sunday", "Monday", "Tuesday", "Wednesday",
                   "Thursday", "Friday", "Saturday"];

console.log(daysOfWeek1.length, daysOfWeek2.length, daysOfWeek3.length,
            daysOfWeek4.length, daysOfWeek5.length);

var arr7 = [7];
var arr78 = [7, 8];
console.log(arr7, arr78);

var fib = [0, 1];
for (var i = 2; i < 25; i++) {
  fib[i] = fib[i - 1] + fib[i - 2];
}
console.log(fib);



//-----------------//
// Adding elements //
//-----------------//
console.log("Adding elements");

var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
arr.push(10);
arr.unshift(0);
console.log(arr);
console.log(arr.length);



//-------------------//
// Removing elements //
//-------------------//
console.log("Removing elements");

arr.pop();
arr.shift();
console.log(arr);



//-------------------------------------------------------//
// Adding and removing elements from a specific position //
//-------------------------------------------------------//
console.log("Adding and removing elements from a specific position");

var removed = arr.splice(1, arr.length - 2);
console.log(arr);
arr.splice(1, 0, ...removed);
console.log(arr);



//---------------------------------------------//
// Two-dimensional and multidimensional arrays //
//---------------------------------------------//
console.log("Two-dimensional and multidimensional arrays");

var arr2D = [[1, 2, 3],
             [4, 5, 6],
             [7, 8, 9]];

var total = 0;
for (var i = 0; i < arr2D.length; i++) {
  for (var j = 0; j < arr2D[i].length; j++) {
    total += arr2D[i][j];
  }
}
console.log(total);



//-----------------------------------------//
// References for JavaScript array methods //
//-----------------------------------------//
console.log("References for JavaScript array methods");

var zero = 0;
var positiveNumbers = [1, 2, 3];
var negativeNumbers = [-3, -2, -1];

var numbers = negativeNumbers.concat(zero, positiveNumbers);
console.log(numbers);

var allLessThan10 = numbers.every(function(n) { return n < 10; });
console.log(allLessThan10);

var nonNegative = numbers.filter(function(n) { return n >= 0; });
console.log(nonNegative);

var squared = numbers.map(function(n) { return n * n; });
console.log(squared);

</script>
</head>
<body>
  See console!
</body>
</html>
